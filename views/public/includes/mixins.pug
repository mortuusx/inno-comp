mixin meta(i)
    -
        var m = i.meta
            iconSize = ''
            iconHref = ''

    if m
        meta(name='description' content=m.description)
        meta(itemprop='name' content=m.title)
        meta(itemprop='description' content=m.description)
        meta(itemprop='image' content=(m.imageUrl || m.image))
        meta(name='twitter:card' content='summary_large_image')
        if m.twitterHandle
            meta(name='twitter:site' content=m.twitterHandle)
        meta(name='twitter:title' content=m.title)
        meta(name='twitter:description' content=m.description)
        if m.twitterHandle
            meta(name='twitter:creator' content=m.twitterHandle)
        meta(name='twitter:image:src' content=(m.twImageUrl || m.image))
        meta(property='og:title' content=m.title)
        meta(property='og:type' content='article')
        meta(property='og:url' content=m.url)
        meta(property='og:image' content=(m.ogImageUrl || m.image))
        meta(property='og:description' content=m.description)
        meta(property='og:site_name' content=m.siteName)
        meta(property='article:published_time' content=m.createdAt)
        meta(property='article:modified_time' content=m.updatedAt)

        if m.favicons
            if m.favicons.icons
                each icon in m.favicons.icons
                    - iconSize = (-1 === icon.indexOf('x')) ? `${icon}x${icon}` : icon
                    - iconHref = `/assets/img/favicon/favicon-${icon}.png`
                    meta(rel='icon' type='image/png' sizes=iconSize href= iconHref)
            if m.favicons.apple
                each icon in m.favicons.apple
                    - iconSize = (-1 === icon.indexOf('x')) ? `${icon}x${icon}` : icon
                    - iconHref = `/assets/img/favicon/favicon-${icon}.png`
                    meta(rel='apple-touch-icon-precomposed' sizes=iconSize href= iconHref)
            meta(name="application-name" content=m.title)
            meta(name="msapplication-tooltip" content=m.description)
            meta(name="msapplication-TileColor" content="#FFFFFF")
            if m.favicons.ms
                each icon in m.favicons.ms
                    meta(name=icon.name content=`/favicon/favicon-${icon.size}.png`)

mixin socialIcons()
    meta(name='icons' content='icons')
mixin search-module
    .search-module
        button.search-button: svg(xmlns='http://www.w3.org/2000/svg' viewBox='0 0 250.313 250.313'): path(d='M244.186 214.604l-54.379-54.378c-.289-.289-.628-.491-.93-.76 10.7-16.231 16.945-35.66 16.945-56.554C205.822 46.075 159.747 0 102.911 0S0 46.075 0 102.911c0 56.835 46.074 102.911 102.91 102.911 20.895 0 40.323-6.245 56.554-16.945.269.301.47.64.759.929l54.38 54.38c8.169 8.168 21.413 8.168 29.583 0 8.168-8.169 8.168-21.413 0-29.582zm-141.275-44.458c-37.134 0-67.236-30.102-67.236-67.235 0-37.134 30.103-67.236 67.236-67.236 37.132 0 67.235 30.103 67.235 67.236s-30.103 67.235-67.235 67.235z')
        .search-box: input(type='text' name='search')

mixin tiles(data)
    .tiles
        if (data.title)
            h2.tiles__title= data.title
        .tiles__content
            each mosaic in data.tiles
                +mosaic(mosaic.type, mosaic)
        if (data.more)
            +more-btn(data.more)

mixin home-news-tiles(data, path, title, more)
    .tiles
        if (title)
            h2.tiles__title= title
        .tiles__content
            each mosaic in data
                +mosaic('news', {mosaic: mosaic, path: path})
        if (more)
            +more-btn(more)

mixin paired-tiles(data)
    .tiles._paired._side-margin__mobile
        if (data.title)
            h2.tiles__title= data.title
        .tiles__content
            each mosaicLine in data.tiles.lines
                .mosaic-line
                    each mosaic in mosaicLine
                        +mosaic(mosaic.type, mosaic)
        if (data.more)
            +more-btn(data.more)

mixin news-tiles(results, path)
    .tiles: .tiles__content
        .tiles_top
            each mosaic, index in results
                if (index < 3)
                    +mosaic('news', { mosaic: mosaic, path: path })
        .tiles_bottom
            each mosaic, index in results
                if (index >= 3)
                    +mosaic('news', { mosaic: mosaic, path: path })


mixin more-btn(more)
    .more-btn: a.cta.hollow(href=more.url)= more.text

mixin mosaic(type, data)
    if (type == 'text')
        +text-mosaic(data)
    if (type == 'img')
        +img-mosaic(data)
    if (type == 'list-img')
        +list-img-mosaic(data)
    if (type == 'news')
        +news-mosaic(data)
    if (type == 'action')
        +action-mosaic(data)
    if (type == 'media')
        +media-mosaic(data)
    if (type == 'list')
        +list-mosaic(data)
    if (type == 'large')
        +large-mosaic(data)

mixin text-mosaic(mosaicData)
    .mosaic.mosaic_text
        if (mosaicData.title)
            h3= mosaicData.title
        each par in mosaicData.paras
            p= par.text

mixin img-mosaic(mosaicData)
    .mosaic.mosaic_img: .mosaic__inner
        +mosaic-bg(mosaicData.img)

mixin news-mosaic(opts)
    .mosaic.mosaic_news: .mosaic__inner
        a.mosaic__link(href=`/${opts.path}/${opts.mosaic.urlName}`)
        if opts.mosaic.image
            +mosaic-bg(opts.mosaic.image)
        .mosaic__overlay
        .mosaic__data
            p.mosaic__date
            a(href=`/${opts.path}/${opts.mosaic.urlName}`).mosaic__title= opts.mosaic.title

mixin niceDate(date)
    if (date)
        if (locale == 'hu')
            = date.getFullYear() + '. ' + i18n.monthNames[date.getMonth()] + '. ' + date.getDate() + '.'
        else
            - var day = date.getDate();
            - if (day === 1) day += '<sup>st</sup>';
            - else if (day === 2) day += '<sup>nd</sup>';
            - else if (day === 3) day += '<sup>rd</sup>';
            - else day += '<sup>th</sup>';
            != day + ' ' + i18n.monthNames[date.getMonth()] + ', ' + date.getFullYear()
    else
        = ''

mixin action-mosaic(mosaicData)
    .mosaic.mosaic_action: .mosaic__inner
        +mosaic-bg(mosaicData.img)
        h3.mosaic__title.mosaic__title_centered= mosaicData.title
        .mosaic__data
            h3.mosaic__title= mosaicData.title
            p.mosaic__lead= mosaicData.lead
            .mosaic__actions
                a.cta.white.btn-details(href=mosaicData.action[0].url)= mosaicData.action[0].title
                a.cta.white.hollow.btn-products(href=mosaicData.action[1].url)= mosaicData.action[1].title

mixin media-mosaic(mosaicData)
    .mosaic.mosaic_media: .mosaic__inner
        button.mosaic__link(gallery=JSON.stringify(mosaicData.images))
        +mosaic-bg(mosaicData.img)
        .mosaic__overlay
        .mosaic__data
            ul.media__icons
                +media-icon(mosaicData.mediaTypes)
                span= mosaicData.count
            h3.mosaic__title= mosaicData.title

mixin large-mosaic(mosaicData)
    .mosaic.mosaic_large: .mosaic__inner
        +mosaic-bg(mosaicData.img)
        .mosaic__data
            h3.mosaic__title= mosaicData.title
            p.mosaic__lead= mosaicData.lead
            .mosaic__actions
                a.cta.btn-details(href=mosaicData.action[0].url)= mosaicData.action[0].title
                if ('products' !== pageKey)
                    a.cta.hollow.btn-products(href=mosaicData.action[1].url)= mosaicData.action[1].title


mixin list-mosaic(mosaicData)
    .mosaic.mosaic_list: .mosaic__inner
        if mosaicData.hash
            a._hash(id=mosaicData.hash)
        h3.mosaic__title=mosaicData.title
        .mosaic__lead
            each par in mosaicData.lead
                p= par.text
        +list(mosaicData.list)
        .mosaic__actions
            a.cta.btn-details(href=mosaicData.action[0].url)= mosaicData.action[0].title
            +download-catalog

mixin list-img-mosaic(mosaicData)
    .mosaic.mosaic_list-img: .mosaic__inner
            +mosaic-bg(mosaicData.img)

mixin mosaic-bg(img)
    .mosaic__bg(style=`background-image:url(${img});`)

mixin media-icon(types)
    ul.media__icons
        each mediatype in types
            if (mediatype == 'video')
                li.video
                    +icon-video
            if (mediatype == 'photo')
                li.photo
                    +icon-photo

mixin icon-photo
    svg(enable-background='new 0 0 19.3 15.4' version='1.1' x='0px' y='0px' viewBox='0 0 19.3 15.4' xml:space='preserve' xmlns='http://www.w3.org/2000/svg'): path(d='m19.3 1.6v12.2c0 0.4-0.2 0.8-0.5 1.1s-0.7 0.5-1.1 0.5h-16.1c-0.4 0-0.8-0.2-1.1-0.5s-0.5-0.6-0.5-1.1v-12.2c0-0.4 0.2-0.8 0.5-1.1s0.7-0.5 1.1-0.5h16.1c0.4 0 0.8 0.2 1.1 0.5s0.5 0.7 0.5 1.1zm-1.6-0.3h-16.1c-0.1 0-0.2 0-0.2 0.1-0.1 0-0.1 0.1-0.1 0.2v12.2c0 0.1 0 0.2 0.1 0.2 0.1 0.1 0.1 0.1 0.2 0.1h16.1c0.1 0 0.2 0 0.2-0.1 0.1 0 0.1-0.1 0.1-0.2v-12.2c0-0.1 0-0.2-0.1-0.2-0.1-0.1-0.1-0.1-0.2-0.1zm-11.8 1.8c0.3 0.4 0.5 0.9 0.5 1.4s-0.2 1-0.6 1.4-0.8 0.5-1.3 0.5-1-0.2-1.4-0.6-0.5-0.8-0.5-1.3 0.2-1 0.6-1.4 0.8-0.5 1.3-0.5 1 0.2 1.4 0.5zm10.8 5.3v4.5h-14.1v-1.9l3.2-3.2 1.6 1.6 5.1-5.1 4.2 4.1z')

mixin icon-video
    svg(version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:a='http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/' viewBox='0 0 18 12.9' enable-background='new 0 0 18 12.9' xml:space='preserve'): path(d='M18,1v10.9c0,0.3-0.1,0.5-0.4,0.6c-0.1,0-0.2,0.1-0.3,0.1c-0.2,0-0.3-0.1-0.5-0.2l-4-4V10c0,0.8-0.3,1.5-0.8,2c-0.6,0.6-1.2,0.8-2,0.8H2.9c-0.8,0-1.5-0.3-2-0.8S0,10.8,0,10V2.9c0-0.8,0.3-1.5,0.8-2S2.1,0,2.9,0H10c0.8,0,1.5,0.3,2,0.8c0.6,0.6,0.8,1.2,0.8,2v1.7l4-4c0.1-0.1,0.3-0.2,0.5-0.2c0.1,0,0.2,0,0.3,0.1C17.9,0.5,18,0.7,18,1z')

mixin icon-catalog
    svg(enable-background='new 0 0 18 18' version='1.1' viewBox='0 0 18 18' xml:space='preserve' xmlns='http://www.w3.org/2000/svg'): path(d='m5.1 0c0.1 0 0.2 0 0.2 0.1 0.1 0.1 0.1 0.1 0.1 0.2v14.8c0 0.1-0.1 0.2-0.2 0.3l-4.7 2.6h-0.2c-0.1 0-0.2 0-0.2-0.1-0.1-0.1-0.1-0.1-0.1-0.2v-14.8c0-0.1 0.1-0.2 0.2-0.3l4.8-2.6h0.1zm1.3 0h0.1l5.1 2.6c0.1 0.1 0.2 0.2 0.2 0.3v14.8c0 0.1 0 0.2-0.1 0.2 0 0.1 0 0.1-0.1 0.1h-0.1l-5.1-2.6c-0.1-0.1-0.2-0.2-0.2-0.3v-14.8c0-0.1 0-0.2 0.1-0.2 0-0.1 0-0.1 0.1-0.1zm11.3 0c0.1 0 0.2 0 0.2 0.1 0.1 0.1 0.1 0.1 0.1 0.2v14.8c0 0.1-0.1 0.2-0.2 0.3l-4.8 2.6h-0.2c-0.1 0-0.2 0-0.2-0.1-0.1-0.1-0.1-0.1-0.1-0.2v-14.8c0-0.1 0.1-0.2 0.2-0.3l4.8-2.6h0.2z')

mixin icon-back
    svg(enable-background='new 0 0 32 16.4' version='1.1' viewBox='0 0 32 16.4' xml:space='preserve' xmlns='http://www.w3.org/2000/svg')
        line(x1='32' x2='2' y1='8.2' y2='8.2' fill='none' stroke-miterlimit='10' stroke-width='2')
        polygon(points='8.8 0 10.2 1.5 2.9 8.2 10.2 14.9 8.8 16.4 0 8.2')

mixin article(data)
    article.article._side-margin__mobile(class=data.class ? data.class : '')
        if (data.title)
            h2= data.title

        div.column
            each paragraph, ind in data.paras
                if (ind % 2 == 0)
                    p !{paragraph.text}
            if (data.list && data.paras.length % 2 == 0)
                +list(data.list)

        div.column
            each paragraph, ind in data.paras
                if (ind % 2 == 1)
                    p !{paragraph.text}
            if (data.list && data.paras.length % 2 == 1)
                +list(data.list)

mixin list(data)
    ul.list
        each li in data
            li
                if (li.title)
                    span.title= li.title
                    span.text= li.text
                else
                    span.text= li.text

mixin site-certificates
    .site-certificates: a.szechenyi(href='/')

mixin hero(type, data)
    section.hero(class= type == 'footer' ? 'bottom' : ''): .inner
        if (type == 'footer')
            p.hero__title= data.title
            p.hero__lead= data.lead
            if ('about' !== pageKey)
                a.cta(href=data.cta.href)= data.cta.text
    //- video(autoplay loop)
    //-     source(src='' type='')
    //-     | Your browser does not support the video tag.

mixin hero-img(img)
    section.hero-img(style=`background:url(${img}) no-repeat center / cover`)

mixin cta(text, url, classes)
    //- classes = ['class1', 'class2']
    //- classes: hollow (üres háttér, borderrel), white (fehér)
    a.cta(href=url class=classes ? classes.join(' ') : '')= text

mixin download-catalog
    a.dwnl-cat(href=i18n.catalog.cta target='_blank')= i18n.catalog.download
        +icon-catalog
    .gradient

mixin catalog-banner
    .catalog-banner
        h3= i18n.catalog.title
        +download-catalog

mixin back(url = '', string = 'Vissza', cls)
    a.back(href=url class=cls ? cls : '')= string
        +icon-back

mixin proposer(data, wide)
    .proposer: .proposer__inner(class=wide)
        each item in data
            .proposer__item
                if (item.url)
                    a.proposer__link(href=item.url)
                if (item.title)
                    p.proposer__title= item.title
                if (item.text)
                    p.proposer__lead= item.text
                if (item.title)
                    +icon-back